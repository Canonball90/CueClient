buildscript {
    repositories {
        mavenCentral()
        maven {
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:4.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.yaml:snakeyaml:1.28"
        classpath 'se.michaelthelin.spotify:spotify-web-api-java:6.5.4'
        classpath 'com.google.code.gson:gson:2.8.6'
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version project.modVersion
group project.modGroup

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

repositories {
    maven {url = 'https://repo.spongepowered.org/repository/maven-public/'}
    maven {url = "https://jitpack.io"}
    mavenCentral()
}

minecraft {
    mappings channel: 'stable', version: '39-1.12'

    accessTransformer = file('src/main/resources/cube_at.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'fml.coreMods.load', 'cn.origin.cube.inject.ForgeCoreModsLoader'
            property 'mixin.env.disableRefMap', 'true'

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

configurations {
    jarDepend
}

dependencies {
    minecraft "net.minecraftforge:forge:$mcVersion"

    jarDepend("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: 'launchwrapper'
        exclude module: 'log4j-core'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }

    annotationProcessor('org.spongepowered:mixin:0.8.2:processor') {
        exclude module: 'gson'
    }
    jarDepend("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version") {
        exclude module: 'kotlin-stdlib-common'
        exclude module: 'annotations'
    }
    //compile(files('noincludelib/baritone.jar'))
    jarDepend("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version") {
        exclude module: 'kotlin-stdlib-common'
        exclude module: 'annotations'
    }
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.28'
    compile group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.1.4'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.14'
    compile group: 'org.apache.httpcomponents', name: 'httpcore-nio', version: '4.4.14'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.13'
    compile group: 'org.json', name: 'json', version: '20210307'
    compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
    implementation 'se.michaelthelin.spotify:spotify-web-api-java:6.5.4'

    compileOnly 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation configurations.jarDepend
}


mixin {
    defaultObfuscationEnv 'searge'
    add sourceSets.main, 'mixins.cube.refmap.json'
}


processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.mcVersion

    filteringCharset 'UTF-8'

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version,
                'mcversion': project.mcVersion,
                'modVersion': project.modVersion
    }
//
//    exclude 'baritone/**' //lmao
//    exclude 'mixins.baritone.json'
//    exclude 'mixins.baritone.refmap.json'

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
    manifest {
        attributes(
                "FMLCorePluginContainsFMLMod": "true",
                "FMLCorePlugin": "cn.origin.cube.inject.ForgeCoreModsLoader",
                'MixinConfigs': 'mixins.cube.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'ForceLoadAsMod': 'true',
                'FMLAT': 'cube_at.cfg'
        )
    }
    from { configurations.jarDepend.collect { it.isDirectory() ? it : zipTree(it) } }
}